`default_nettype none

module register_test(
  input wire clk,
  output wire result_out,
  output reg done
  );

reg load = 1'b0;
reg [15:0] in_data = 16'hffff;
wire [15:0] out_data;
register r(.i_clk(clk), .i_load(load), .i_data(in_data), .o_data(out_data));

reg [15:0] expected = 16'h0000;

wire [31:0] result = out_data - expected;
reg output_valid = 1'b1;
assign result_out = |result & output_valid;

initial begin
done = 1'b0;
output_valid = 0;
#1
output_valid = 1;
load = 1;
expected = 16'hFFFF;
#1
load = 0;
expected = 16'hFFFF;
#1
output_valid = 0;
#1
output_valid = 1;
expected = 16'hFFFF;
#1
expected = 16'hACAC;
load = 1;
in_data = 16'hACAC;
#1
load = 0;
expected = 16'hACAC;
#1
output_valid = 1'b0;
done = 1'b1;
end

endmodule
